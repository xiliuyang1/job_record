python怎么获取自然月最后一秒的时间戳
from datetime import datetime, timedelta, date

# 获取当前日期
current_date = datetime.now().date()

# 计算下一个月的第一天
first_day_of_next_month = datetime(current_date.year + (current_date.month // 12),
                                   (current_date.month % 12) + 1, 1)

# 计算当前自然月的最后一天
last_day_of_current_month = first_day_of_next_month - timedelta(days=1)

# 将时间设置为当天的23:59:59（最后一秒）
last_second_of_current_month = datetime.combine(last_day_of_current_month, datetime.max.time())

# 获取时间戳
timestamp = int(last_second_of_current_month.timestamp())

print(f"Last second of the current month timestamp: {timestamp}")

current_date.year + (current_date.month // 12): 这部分计算下一个月的年份。当 current_date.month 为 12 时，整除 12 的结果为 1，因此年份会增加 1。
(current_date.month % 12) + 1: 这部分计算下一个月的月份。current_date.month % 12 得到当前月份除以 12 的余数，然后再加 1，确保月份在 1 到 12 的范围内。
1: 这是下一个月的第一天。
将这三个部分结合在一起，就得到了下一个月的第一天的日期。例如，如果当前日期是 2022 年 12 月 15 日，那么计算得到的结果就是 2023 年 1 月 1 日。这个日期用于计算当前自然月的最后一天。


datetime.now(): 这部分获取当前的日期和时间，返回一个 datetime 对象。
.date(): 这部分从 datetime 对象中提取日期部分，返回一个 date 对象。date 对象表示日期，而不包含时间信息。
因此，current_date 就是当前日期的 date 对象。例如，如果今天是 2022 年 12 月 15 日，那么current_date 就会是一个包含 2022-12-15 的 date 对象。

这样的代码通常用于获取当前日期，而不关心具体的时间。如果你对时间也感兴趣，可以直接使用 datetime.now()，它会包含日期和时间的信息。

timedelta(days=1) 表示一天的时间间隔。在这个例子中，next_day 就是当前日期和时间加上一天后的结果。

timedelta 还可以表示其他时间单位的间隔，如小时、分钟、秒等。例如，timedelta(hours=2) 表示两个小时的时间间隔。